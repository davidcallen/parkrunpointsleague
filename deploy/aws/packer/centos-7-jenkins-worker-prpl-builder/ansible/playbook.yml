# ParkRun Points League - GPLv3
#
- name: "apply common configuration to all nodes"
  hosts: all
  become: yes
  become_method: sudo
  vars:
    install_diagnostic_tools: true
    jenkins_worker_group: jenkins
    jenkins_worker_user: jenkins
    log_files_for_purging:
      - { path: /var/log/messages, owner: root, mode: '0640' }
      - { path: /var/log/secure, owner: root, mode: '0600' }
      - { path: /var/log/cloud-init.log, owner: root, mode: '0600' }
      - { path: /var/log/cloud-init-output.log, owner: root, mode: '0600' }
      - { path: /var/log/jenkins/jenkins.log, owner: jenkins, group: jenkins, mode: '0640' }

  # -------------------------------------------   Pre Tasks   -------------------------------------------
  pre_tasks:
    - name: "Save IP address for possible ansible debugging"
      copy:
        content: "[all]\ncentos@{{ ansible_default_ipv4.address }}"
        dest: ~/group_vars_static

    - name: "Save IP address locally for ansible debugging"
      fetch:
        src: ~/group_vars_static
        dest: ./group_vars/static
        flat: yes

    - name: "Create AMI identifier file"
      file:
        path: "/PRPL_PACKER_AMI_{{ AMI_NAME }}"
        owner: root
        group: root
        mode: '0644'
        state: touch
      tags: stamp_ami

  # -------------------------------------------   Roles   -------------------------------------------
  roles:
    - role: geerlingguy.java
      tags: java

  # -------------------------------------------   Tasks   -------------------------------------------
  tasks:
    - name: "Yum install the tools for building prpl libs"
      yum:
        name:
          - gcc
          - gcc-c++
          - gdb
          - git
          - cmake
          - mariadb
          - mariadb-devel
          - openssl-devel
          - libtool
          - libtool-ltdl-devel
          - maven

    - name: "Add the Jenkins Group"
      group:
        name: "{{ jenkins_worker_group }}"
        state: present
        # system: true

    - name: "Add the Jenkins user account"
      user:
        name: "{{ jenkins_worker_user }}"
        comment: Jenkins User
        group: "{{ jenkins_worker_group }}"

  # -------------------------------------------   Post Tasks   -------------------------------------------
  post_tasks:
    - name: "Check for log files to purge"
      stat: path="{{ item.path }}"
      with_items: "{{ log_files_for_purging }}"
      register: log_files_for_purging_check
      tags: logs

    - name: "Ensure we have empty log files from when image was created"
      shell: "truncate --size=0 {{ item.stat.path }}"
      when: "{{ item.stat.exists | bool}} == true"
      with_items: "{{ log_files_for_purging_check.results }}"
      tags: logs