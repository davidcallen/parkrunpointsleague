# Invoke from gcloud shell with :
#    gcloud builds submit --config cloudbuild.yaml ../../../docker/image/prpl

steps:

# -------------------------------------- PRPL LIBS -------------------------------------------------
# Build libtidy
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '--rm', '--volume=build-output-vol:/prpl', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl-builder:latest', '/bin/sh', '-c', 'mkdir -p /prpl-srcs/ && cd /prpl-srcs && git clone -b 5.8.0 https://github.com/htacg/tidy-html5 && cd tidy-html5 && cd build/cmake && cmake ../.. -DCMAKE_INSTALL_PREFIX=/prpl -DCMAKE_BUILD_TYPE=Release && make install && chmod -R 777 /prpl']
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/build-output'
  timeout: 600s

# Debug : check resultant output files
- name: 'alpine'
  args: ['sh', '-c', 'set -x && echo `pwd` && ls -la && ls -la / && ls -la /*' ]
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/build-output'

# Build gumbo
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '--rm', '--volume=build-output-vol:/prpl', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl-builder:latest', '/bin/sh', '-c', 'mkdir -p /prpl-srcs/ && cd /prpl-srcs && git clone -b v0.10.1 https://github.com/google/gumbo-parser && cd gumbo-parser && ./autogen.sh && ./configure --prefix=/prpl && make -j ${_PRPL_MAKE_JOBS} && make install && chmod -R 777 /prpl']
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/build-output'
  timeout: 600s

# Debug : check resultant output files
- name: 'alpine'
  args: ['sh', '-c', 'set -x && echo `pwd` && ls -la && ls -la / && ls -la /*' ]
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/build-output'
  
# Build poco
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '--rm', '--volume=build-output-vol:/prpl', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl-builder:latest', '/bin/sh', '-c', 'mkdir -p /prpl-srcs/ && cd /prpl-srcs && export LD_LIBRARY_PATH=/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib && git clone -b poco-1.7.8-release https://github.com/pocoproject/poco.git && cd poco && ./configure --prefix=/prpl --everything --omit=Data/ODBC,Data/SQLite,PDF,MongoDB,ApacheConnector,CppParser,PageCompiler,ProGen,SevenZip --no-samples --no-tests && mkdir cmake_build && cd cmake_build && cmake .. -DCMAKE_INSTALL_PREFIX=/prpl -DENABLE_DATA_ODBC=OFF -DENABLE_DATA_SQLITE=OFF -DENABLE_PDF=OFF -DENABLE_TESTS=OFF -DENABLE_MONGODB=OFF -DENABLE_ZIP=OFF && make -j ${_PRPL_MAKE_JOBS} VERBOSE=1 && make install && chmod -R 777 /prpl']
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/build-output'
  timeout: 600s

# Debug : check resultant output files
- name: 'alpine'
  args: ['sh', '-c', 'set -x && echo `pwd` && ls -la && ls -la / && ls -la /*' ]
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/build-output'
  
# Build the image (Dockerfile will git clone then make)
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--volume=build-output-vol:/workspace/build-output', '--build-arg', 'PRPL_MAKE_JOBS=${_PRPL_MAKE_JOBS}', '-t', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl-base:${COMMIT_SHA}', '-f', 'Dockerfile', '.']
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/build-output'
  timeout: 600s

# Debug : check resultant output files
- name: 'alpine'
  args: ['sh', '-c', 'set -x && echo `pwd` && ls -la && ls -la / && ls -la /*' ]
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/build-output'
    
# -------------------------------------- PRPL ------------------------------------------------------
# Extract the 3rd-party dependancy libs from prpl-base image for use in this image build
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '--rm', '--volume=prpl-libs-vol:/prpl-tmp', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl-base:${_PRPL_BASE_DOCKER_IMAGE_TAG}', '/bin/sh', '-c', 'set -x  && cp -r /prpl-libs/* /prpl-tmp && chmod -R 777 /prpl-libs']
  volumes:
  - name: 'prpl-libs-vol'
    path: '/workspace/prpl-libs'
  timeout: 600s

# Build prpl
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '--rm', '--volume=build-output-vol:/prpl', '--volume=prpl-libs-vol:/prpl-libs', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl-builder:latest', '/bin/sh', '-c', 'set -x && cd / && git clone https://github.com/davidcallen/parkrunpointsleague.git prpl && ls -la /prpl-libs && mv /prpl-libs/* /prpl/ && rm -f /prpl/lib/*.a && rm -f /prpl/lib/*.la && cd /prpl/src && export LD_LIBRARY_PATH=/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:/prpl/lib && ./build.sh -clean -cpu ${_PRPL_MAKE_JOBS} -v && rm -rf /prpl/src/exe/prpld/CMakeFiles && rm -f /prpl/sql/db-backups/* && mkdir /prpl/deploy/docker/image/prpl/build-output && cp -r /prpl/bin /prpl/lib /prpl/doc /prpl/sql /prpl/assets /prpl/deploy/docker/image/prpl/build-output && chmod -R 777 /prpl/deploy/docker/image/prpl/build-output']
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/prpl'
  - name: 'prpl-libs-vol'
    path: '/workspace/prpl-libs'
  timeout: 600s

# Debug : check resultant output files
- name: 'alpine'
  args: ['sh', '-c', 'set -x && echo `pwd` && ls -la && ls -la /workspace/prpl/deploy/docker/image/prpl/build-output/*' ]
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/prpl'
    
# Build the image (Dockerfile will git clone then make)
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl:${COMMIT_SHA}', '-t', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl:latest', '-f', '/workspace/prpl/deploy/docker/image/prpl/Dockerfile', '/workspace/prpl/deploy/docker/image/prpl/']
  volumes:
  - name: 'build-output-vol'
    path: '/workspace/prpl'
  timeout: 600s

substitutions:
    _PRPL_DOCKER_REGISTRY_HOSTNAME: 'eu.gcr.io'
    _PRPL_GCP_PROJECT_NAME: 'davidcallen'
    _PRPL_DOCKER_IMAGE_TAG: 'latest'
    _PRPL_MAKE_JOBS: '2'

images: [ '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl-base', '${_PRPL_DOCKER_REGISTRY_HOSTNAME}/${_PRPL_GCP_PROJECT_NAME}/prpl' ]

options:
  substitution_option: 'ALLOW_LOOSE'  
